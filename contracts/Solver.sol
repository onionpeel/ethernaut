// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

contract DeployBytecode {
    
    // Create contract from bytecode
    function deployBytecode(bytes memory bytecode) public returns (address) {
        address retval;
        assembly{
            mstore(0x0, bytecode)
            retval := create(0,0xa0, calldatasize())
        }
        return retval;
   }
}

// contract Solver {
//   function whatIsTheMeaningOfLife() external pure returns (uint256) {
//     assembly {
//       mstore(0x40, 0x2a)
//       return(0x40, 0x20)
//     }
//   }
// }

// PUSH1 0x2A PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN

// 602A60405260206040f3
//     "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8C DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x650500C1 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x49 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2A PUSH1 0x40 MSTORE PUSH1 0x20 PUSH1 0x40 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATASIZE PUSH15 0xB219550EC61DA999E65D40A7ED3EF6 0xB0 PUSH5 0xEF48202FFF 0xEB OR 0xB9 0xD8 OR REVERT CREATE PUSH5 0x64736F6C63 NUMBER STOP MOD STOP STOP CALLER ",
